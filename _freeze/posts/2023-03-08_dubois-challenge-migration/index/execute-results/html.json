{
  "hash": "57ddafcff88bc58313895173dfd7d559",
  "result": {
    "markdown": "---\ntitle: \"Migration Maps\"\ndate: 2023-03-16\nauthor:  \n  - name: \"Carlos Cámara-Menoyo\"\n      # given: \"Carlos\"\n      # family: \"Cámara-Menoyo\"\n      # literal: \"Carlos Cámara-Menoyo\"\n    orcid: 0000-0002-9378-0549\n    email: carlos.camara@warwick.ac.uk\n    affiliations:\n    - name: University of Warwick\n      address: Centre for Interdisciplinary Methodologies (CIM), Social Sciences Building\n      city: Coventry\n      postal-code: CV4 7AL\ncategories:\n  - R\n  - tutorial\n  - maps\nimage: \"https://raw.githubusercontent.com/ajstarks/dubois-data-portraits/master/challenge/challenge09/original-plate-08.jpg\"\nimage-alt: \"W.E.B. Dubois Plate to be recreated.\"\nformat:\n  html:\n    toc: true\n    #code-line-numbers: true\n    reference-location: margin\neditor: visual\nbibliography: references.bib\ncitation: true\n---\n\n\n## The #DuboisChallenge\n\nRead here https://nightingaledvs.com/the-dubois-challenge/\n\nIn this case, this is the image we want to recreate\n\nYou can read more here [@tackett2023]\n\n![*\"The Georgia Negro. A Social Study by W.E.Burghardt Du Bois\".* The original image from Dubois that is to be recreated](https://raw.githubusercontent.com/ajstarks/dubois-data-portraits/master/challenge/challenge09/original-plate-08.jpg){#fig-original}\n\n### W.E.B. Dubois\n\nExplain who he was\n\n## Recreating the plate\n\nThis\n\n\n::: {#tbl-dubois-dataset .cell tbl-cap='WEB Dubois\\' data, combined in a single dataframe.'}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(showtext) # Custom fonts\nlibrary(sf) # SF requires GDAL to be installed. Read packages' info with instructions.\n\ndf_birthplace <- read.csv(\"https://raw.githubusercontent.com/ajstarks/dubois-data-portraits/master/plate08/birthplace.csv\")\n\ndf_current <- read.csv(\"https://github.com/ajstarks/dubois-data-portraits/raw/master/plate08/present.csv\")\n\ndubois_df <- df_current |> \n  left_join(df_birthplace, by = join_by(State)) |> \n  rename_with(tolower)\n\n# Explore the data\ndubois_df |> \n  head() |> \n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|state | present.location| birthplace|\n|:-----|----------------:|----------:|\n|CA    |              254|         NA|\n|AZ    |               48|         NA|\n|NM    |               38|          1|\n|OK    |               68|          9|\n|TX    |            12016|         99|\n|LA    |             6025|        144|\n:::\n:::\n\n\nExcellent! But regretfully, this is not all the data that we need. We need another dataset with the\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(spData) # Provides several geospatial datasets, such as the USA.\n\ndata(\"us_states\")\n\nhead(us_states)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -114.8136 ymin: 24.55868 xmax: -71.78699 ymax: 42.04964\nGeodetic CRS:  NAD83\n  GEOID        NAME   REGION             AREA total_pop_10 total_pop_15\n1    01     Alabama    South 133709.27 [km^2]      4712651      4830620\n2    04     Arizona     West 295281.25 [km^2]      6246816      6641928\n3    08    Colorado     West 269573.06 [km^2]      4887061      5278906\n4    09 Connecticut Norteast  12976.59 [km^2]      3545837      3593222\n5    12     Florida    South 151052.01 [km^2]     18511620     19645772\n6    13     Georgia    South 152725.21 [km^2]      9468815     10006693\n                        geometry\n1 MULTIPOLYGON (((-88.20006 3...\n2 MULTIPOLYGON (((-114.7196 3...\n3 MULTIPOLYGON (((-109.0501 4...\n4 MULTIPOLYGON (((-73.48731 4...\n5 MULTIPOLYGON (((-81.81169 2...\n6 MULTIPOLYGON (((-85.60516 3...\n```\n:::\n:::\n\n\nThis provides us with interesting information and beteersweet news: The good news is that there's a column named `geometry` that means that the `us_states` object, is not a regular data frame, but is actually a spatial object:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(us_states)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sf\"         \"data.frame\"\n```\n:::\n:::\n\n\nWe can view its geometry calling the `plot()` function from base R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(us_states)\n```\n\n::: {.cell-output-display}\n![US data (without Alaska) provided by `spData` package.](index_files/figure-html/fig-us_data-1.png){#fig-us_data width=672}\n:::\n:::\n\n\nThis is useful because we could combine (join) that geometry with the data in `dubois_df`. However, here come the bad news: in order to do that, we'd need a shared variable, and there is none. While both datasets refer to the same states, `dubois_df` uses their code names, whereas `us_states` has their full names.\n\nWe can overcome that with relative ease by combining a dataset that translates code names into full names:\n\n\n::: {#tbl-us-states-dictionary .cell tbl-cap='An intermediate dataset containing USA states\\' names and codes.'}\n\n```{.r .cell-code}\n# Data from: https://worldpopulationreview.com/states/state-abbreviations\nstates_dic <- read.csv(\"data/us_states_names.csv\")\n\nstates_dic |> \n  head() |> \n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|state      |abbrev |code |\n|:----------|:------|:----|\n|Alabama    |Ala.   |AL   |\n|Alaska     |Alaska |AK   |\n|Arizona    |Ariz.  |AZ   |\n|Arkansas   |Ark.   |AR   |\n|California |Calif. |CA   |\n|Colorado   |Colo.  |CO   |\n:::\n:::\n\n\nNow we can combine everything together:\n\n\n::: {#tbl-dubois-data-with-states .cell tbl-cap='Dubois\\' data, now with the states\\' full name.'}\n\n```{.r .cell-code}\ndubois_df <- dubois_df |> \n  rename(code = state) |> \n  left_join(states_dic, by = join_by(code))\n\ndubois_df |> \n  head() |> \n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|code | present.location| birthplace|state      |abbrev |\n|:----|----------------:|----------:|:----------|:------|\n|CA   |              254|         NA|California |Calif. |\n|AZ   |               48|         NA|Arizona    |Ariz.  |\n|NM   |               38|          1|New Mexico |N.M.   |\n|OK   |               68|          9|Oklahoma   |Okla.  |\n|TX   |            12016|         99|Texas      |Tex.   |\n|LA   |             6025|        144|Louisiana  |La.    |\n:::\n:::\n\n\nAnd we can join the data with the corresponding geometry:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndubois_sdf <- us_states |> \n  left_join(dubois_df, by = c(\"NAME\" = \"state\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in sf_column %in% names(g): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 12 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n\n```{.r .cell-code}\ndubois_sdf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 50 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -124.7042 ymin: 24.55868 xmax: -66.9824 ymax: 49.38436\nGeodetic CRS:  NAD83\nFirst 10 features:\n   GEOID        NAME   REGION             AREA total_pop_10 total_pop_15 code\n1     01     Alabama    South 133709.27 [km^2]      4712651      4830620   AL\n2     04     Arizona     West 295281.25 [km^2]      6246816      6641928   AZ\n3     08    Colorado     West 269573.06 [km^2]      4887061      5278906   CO\n4     09 Connecticut Norteast  12976.59 [km^2]      3545837      3593222   CT\n5     12     Florida    South 151052.01 [km^2]     18511620     19645772   FL\n6     13     Georgia    South 152725.21 [km^2]      9468815     10006693   GA\n7     16       Idaho     West 216512.66 [km^2]      1526797      1616547   ID\n8     18     Indiana  Midwest  93648.40 [km^2]      6417398      6568645   IN\n9     20      Kansas  Midwest 213037.08 [km^2]      2809329      2892987   KS\n10    22   Louisiana    South 122345.76 [km^2]      4429940      4625253   LA\n   present.location birthplace abbrev                       geometry\n1             24556       6720   Ala. MULTIPOLYGON (((-88.20006 3...\n2                48         NA  Ariz. MULTIPOLYGON (((-114.7196 3...\n3               285         NA  Colo. MULTIPOLYGON (((-109.0501 4...\n4                97         13  Conn. MULTIPOLYGON (((-73.48731 4...\n5              3981       3198   Fla. MULTIPOLYGON (((-81.81169 2...\n6            798747     798747    Ga. MULTIPOLYGON (((-85.60516 3...\n7                 7          1  Idaho MULTIPOLYGON (((-116.916 45...\n8               193         21   Ind. MULTIPOLYGON (((-87.52404 4...\n9               480          6  Kans. MULTIPOLYGON (((-102.0517 4...\n10             6025        144    La. MULTIPOLYGON (((-92.01783 2...\n```\n:::\n:::\n\n\nhttps://github.com/ajstarks/dubois-data-portraits/tree/master\n\nCreate a map\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tmap)\n\n# df_long <- dubois_sdf |> \n#   select(GEOID, NAME, present.location, birthplace) |> \n#   tidyr::pivot_longer()\n\ntm_shape(dubois_sdf) +\n    tm_polygons(\"birthplace\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nREad https://stackoverflow.com/questions/49423007/how-to-adjust-color-palette-with-customized-breaks-in-tmap\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(usmap)\n\nplot_usmap(data = dubois_df, values = \"birthplace\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Extending the original\n\nOne of the aims of the challenge is to recreate Dubois plates using modern tools, in this years, not only new tools have appeared, there are also different visualisation types.\n\n### Sankey diagram\n\n### Interactive maps\n\nInspiration:\n\n-   https://bookdown.org/nicohahn/making_maps_with_r5/docs/mapdeck.html\n\n-   https://geospatialtraining.com/tutorial-mapping-migration-flows-with-r/\n\n-   https://personal.tcu.edu/kylewalker/interactive-flow-visualization-in-r.html\n\n-   https://plotly.com/r/lines-on-maps/\n\nReferences:\n\n-   Dubois challenge:\n\n    -   zInteresting paper [@tackett2023]\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}